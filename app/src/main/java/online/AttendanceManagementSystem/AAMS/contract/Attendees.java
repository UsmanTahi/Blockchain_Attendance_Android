package online.AttendanceManagementSystem.AAMS.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class Attendees extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_ATTENDEES = "attendees";

    public static final String FUNC_MARKATTENDANCEBYSUBJECT = "markAttendanceBySubject";

    public static final String FUNC_ADDNEWSUBJECT = "addNewSubject";

    public static final String FUNC_GETSTUDENTATTENDANCEFORSUBJECT = "getStudentAttendanceForSubject";

    public static final String FUNC_ADDATTENDEE = "addAttendee";

    public static final String FUNC_ADDSTUDENTENROLLED = "addStudentEnrolled";

    public static final String FUNC_UPDATEATTENDEE = "updateAttendee";

    public static final String FUNC_ATTENDEESCOUNT = "attendeesCount";

    public static final String FUNC_LISTOFSUBJECTS = "listOfSubjects";

    public static final String FUNC_AUTHENTICATEUSER = "authenticateUser";

    public static final String FUNC_CHANGESTATUSEMPLOYEE = "changeStatusEmployee";

    public static final String FUNC_SUBJECTSERIALNUMBER = "subjectSerialNumber";

    @Deprecated
    protected Attendees(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Attendees(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Attendees(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Attendees(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple8<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger>> attendees(BigInteger param0) {
        final Function function = new Function(FUNC_ATTENDEES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple8<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger>>(
                new Callable<Tuple8<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple8<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, String, String, String, BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (BigInteger) results.get(7).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> markAttendanceBySubject(String _subject_id, String _public_key) {
        final Function function = new Function(
                FUNC_MARKATTENDANCEBYSUBJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_subject_id), 
                new org.web3j.abi.datatypes.Address(_public_key)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addNewSubject(String _attendance_giver, String _subject_id, String _batch_id) {
        final Function function = new Function(
                FUNC_ADDNEWSUBJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_attendance_giver), 
                new org.web3j.abi.datatypes.Utf8String(_subject_id), 
                new org.web3j.abi.datatypes.Utf8String(_batch_id)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getStudentAttendanceForSubject(String _subject_id, String _public_key) {
        final Function function = new Function(FUNC_GETSTUDENTATTENDANCEFORSUBJECT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_subject_id), 
                new org.web3j.abi.datatypes.Address(_public_key)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addAttendee(String _name, String _roll, String _email, BigInteger _imei, String _public_key, BigInteger status) {
        final Function function = new Function(
                FUNC_ADDATTENDEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_roll), 
                new org.web3j.abi.datatypes.Utf8String(_email), 
                new org.web3j.abi.datatypes.generated.Uint256(_imei), 
                new org.web3j.abi.datatypes.Address(_public_key), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addStudentEnrolled(String _attendance_giver, String _subject_id, String _public_key) {
        final Function function = new Function(
                FUNC_ADDSTUDENTENROLLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_attendance_giver), 
                new org.web3j.abi.datatypes.Utf8String(_subject_id), 
                new org.web3j.abi.datatypes.Address(_public_key)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateAttendee(String _user_add, String _name, String _roll, String _email, BigInteger _imei, BigInteger status) {
        final Function function = new Function(
                FUNC_UPDATEATTENDEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user_add), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_roll), 
                new org.web3j.abi.datatypes.Utf8String(_email), 
                new org.web3j.abi.datatypes.generated.Uint256(_imei), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> attendeesCount() {
        final Function function = new Function(FUNC_ATTENDEESCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple4<String, String, String, BigInteger>> listOfSubjects(BigInteger param0) {
        final Function function = new Function(FUNC_LISTOFSUBJECTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return new RemoteCall<Tuple4<String, String, String, BigInteger>>(
                new Callable<Tuple4<String, String, String, BigInteger>>() {
                    @Override
                    public Tuple4<String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<Boolean> authenticateUser(String _user_add) {
        final Function function = new Function(FUNC_AUTHENTICATEUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user_add)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> changeStatusEmployee(String _employeeAdd, BigInteger status) {
        final Function function = new Function(
                FUNC_CHANGESTATUSEMPLOYEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_employeeAdd), 
                new org.web3j.abi.datatypes.generated.Uint256(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> subjectSerialNumber() {
        final Function function = new Function(FUNC_SUBJECTSERIALNUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static Attendees load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Attendees(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Attendees load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Attendees(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Attendees load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Attendees(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Attendees load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Attendees(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Attendees> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Attendees.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Attendees> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Attendees.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Attendees> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Attendees.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Attendees> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Attendees.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
